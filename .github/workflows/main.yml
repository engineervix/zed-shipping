name: CI/CD

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ["main"]

  push:
    branches: ["main"]
    tags:
      - "v*"

jobs:
  linter_stylelint:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Install Dependencies
        run: |
          npm ci

      - name: Stylelint
        run: |
          npm run lint:style

  linter_eslint:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Install Dependencies
        run: |
          npm ci

      - name: ESLint
        run: |
          npm run lint:js

  linter_prettier:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Install Dependencies
        run: |
          npm ci

      - name: Prettier
        run: |
          npm run lint:format

  test:
    runs-on: ubuntu-22.04
    needs: [linter_stylelint, linter_eslint, linter_prettier]

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Install Dependencies
        run: |
          npm ci

      - name: Test with jest
        shell: bash
        run: |
          npm test -- --ci --reporters="github-actions"

  # Creates a GitHub Release when the lint & test jobs succeeds, and only on pushes to tags.
  release:
    needs: [linter_stylelint, linter_eslint, linter_prettier, test]

    permissions:
      contents: write

    if: needs.test.result == 'success' && startsWith( github.ref, 'refs/tags/v' )

    runs-on: ubuntu-22.04

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r misc/requirements.txt
      - name: Get the version
        id: get_version
        run: |
          echo "${{ github.ref }}"
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Generate Release Title
        id: get_release_title
        shell: bash
        run: |
          export TODAY="($(TZ=Africa/Lusaka date --iso))"
          echo ::set-output name=RELEASE_NAME::"${{ steps.get_version.outputs.VERSION }} $TODAY"
      - name: Extract Release Notes
        # This creates a file LATEST_RELEASE_NOTES.md in the parent directory (../)
        shell: bash
        run: |
          python3 misc/release.py notes
      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.get_release_title.outputs.RELEASE_NAME }}
          body_path: ../LATEST_RELEASE_NOTES.md
